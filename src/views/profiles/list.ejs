<%- include('../partials/header', { title: 'Manage Profiles' }) %>
    <nav class="navbar navbar-expand-lg navbar-light bg-light">
        <a class="navbar-brand" href="/">Admin Panel</a>
        <div class="collapse navbar-collapse">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item"><a class="nav-link" href="/admin/users">Users</a></li>
                <li class="nav-item"><a class="nav-link" href="/admin/profiles">Profiles</a></li>
                <li class="nav-item"><a class="nav-link" href="/admin/blogs">Blogs</a></li>
            </ul>
        </div>
    </nav>
    <div class="container mt-4">
        <h1>Manage Profiles</h1>
        <a href="/admin/profiles/new" class="btn btn-primary mb-3">Add New Profile</a>
        <table class="table table-bordered">
            <thead>
                <tr>
                    <% fields.forEach(field=> { %>
                        <th>
                            <%= field %>
                        </th>
                        <% }) %>
                            <th>Actions</th>
                </tr>
            </thead>
            <tbody>
                <% entities.forEach(entity=> { %>
                    <tr>
                        <% fields.forEach(field=> { %>
                            <td>
                                <%= entity[field] %>
                            </td>
                            <% }) %>
                                <td>
                                    <button onclick="editEntity('profile', '<%= entity.id %>')"
                                        class="btn btn-warning btn-sm">Edit</button>
                                    <button onclick="deleteEntity('profile', '<%= entity.id %>')"
                                        class="btn btn-danger btn-sm">Delete</button>
                                </td>
                    </tr>
                    <% }) %>
            </tbody>
        </table>
    </div>
    <%- include('../partials/footer') %>
        <script>
            document.addEventListener("DOMContentLoaded", () => {
                window.deleteEntity = function (entityType, id) {
                    Swal.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            fetch(`/admin/${entityType}s/${id}`, {
                                method: 'DELETE'
                            }).then(response => {
                                if (response.ok) {
                                    Swal.fire('Deleted!', `${entityType} has been deleted.`, 'success').then(() => {
                                        location.reload();
                                    });
                                } else {
                                    Swal.fire('Failed!', `Failed to delete ${entityType}.`, 'error');
                                }
                            });
                        }
                    });
                }
                window.editEntity = function (entityType, id) {
                    fetch(`/admin/${entityType}s/${id}`).then(response => response.json()).then(data => {
                        const modal = $('#editModal');
                        modal.find('.modal-title').text(`Edit ${entityType}`);
                        modal.find('form').attr('action', `/admin/${entityType}s/${id}?_method=PUT`);
                        for (const key in data) {
                            modal.find(`[name="${key}"]`).val(data[key]);
                        }
                        modal.modal('show');
                    }).catch(error => {
                        Swal.fire('Error!', 'Failed to fetch data for editing.', 'error');
                    });
                }
                $('#editModal form').on('submit', function (event) {
                    event.preventDefault();
                    const form = $(this);
                    const formData = new URLSearchParams(new FormData(form[0]));
                    const action = form.attr('action');
                    fetch(action, {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/x-www-form-urlencoded'
                        },
                        body: formData
                    }).then(response => response.json()).then(data => {
                        if (data.error) {
                            Swal.fire('Error!', data.error, 'error');
                        } else {
                            Swal.fire('Success!', 'Operation completed successfully.', 'success').then(() => {
                                location.reload();
                            });
                        }
                    }).catch(error => {
                        Swal.fire('Error!', 'An error occurred.', 'error');
                    });
                });
            });
        </script>