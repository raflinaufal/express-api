<!DOCTYPE html>
<html lang="en">
<%- include('./partials/header') %>

    <body>
        <div class="container mt-5">
            <h1>Admin Dashboard</h1>
            <div id="user-info">
                <p>User ID: <%= user.userId %>
                </p>
                <p>Email: <%= user.email %>
                </p>
                <p>Name: <%= user.name %>
                </p>
                <p>Role: <%= user.role %>
                </p>
            </div>
            <button id="logout-button" class="btn btn-primary">Logout</button>

            <h2>Manage Users</h2>
            <button id="add-user-button" class="btn btn-success" data-toggle="modal" data-target="#userModal">Add
                User</button>
            <table class="table mt-3" id="users-table">
                <thead>
                    <tr>
                        <th>ID</th>
                        <th>Email</th>
                        <th>Name</th>
                        <th>Role</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody id="users-tbody">
                    <!-- Users will be loaded here via AJAX -->
                </tbody>
            </table>
        </div>

        <!-- User Modal -->
        <div class="modal fade" id="userModal" tabindex="-1" role="dialog" aria-labelledby="userModalLabel"
            aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="userModalLabel">Add User</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="user-form">
                            <input type="hidden" id="user-id">
                            <div class="form-group">
                                <label for="user-email">Email</label>
                                <input type="email" class="form-control" id="user-email" required>
                            </div>
                            <div class="form-group">
                                <label for="user-name">Name</label>
                                <input type="text" class="form-control" id="user-name" required>
                            </div>
                            <div class="form-group">
                                <label for="user-role">Role</label>
                                <select class="form-control" id="user-role">
                                    <option value="user">User</option>
                                    <option value="admin">Admin</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="user-password">Password</label>
                                <input type="password" class="form-control" id="user-password" required>
                            </div>
                            <button type="submit" class="btn btn-primary">Save</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>


        <%- include('./partials/footer') %>
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
            <script>
                document.addEventListener('DOMContentLoaded', async () => {
                    loadUsers();

                    document.getElementById('logout-button').addEventListener('click', async () => {
                        try {
                            const response = await fetch('/auth/logout', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                }
                            });

                            if (response.ok) {
                                const data = await response.json();
                                Swal.fire({
                                    icon: 'success',
                                    title: 'Logged Out',
                                    text: data.message
                                }).then(() => {
                                    window.location.href = '/auth/login';
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Logout Failed',
                                    text: 'An error occurred while logging out'
                                });
                            }
                        } catch (error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Logout Failed',
                                text: 'An error occurred while logging out'
                            });
                        }
                    });

                    document.getElementById('user-form').addEventListener('submit', async (event) => {
                        event.preventDefault();

                        const userId = document.getElementById('user-id').value;
                        const email = document.getElementById('user-email').value;
                        const name = document.getElementById('user-name').value;
                        const role = document.getElementById('user-role').value;
                        const password = document.getElementById('user-password').value;

                        const method = userId ? 'PUT' : 'POST';
                        const url = userId ? `/users/${userId}` : '/users';

                        try {
                            const response = await fetch(url, {
                                method,
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify({ email, name, role, password })
                            });

                            if (response.ok) {
                                Swal.fire({
                                    icon: 'success',
                                    title: 'User Saved',
                                    text: 'User information has been saved successfully.'
                                }).then(() => {
                                    loadUsers();
                                    $('#userModal').modal('hide');
                                });
                            } else {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Save Failed',
                                    text: 'An error occurred while saving the user information.'
                                });
                            }
                        } catch (error) {
                            Swal.fire({
                                icon: 'error',
                                title: 'Save Failed',
                                text: 'An error occurred while saving the user information.'
                            });
                        }
                    });

                    document.getElementById('add-user-button').addEventListener('click', () => {
                        document.getElementById('user-id').value = '';
                        document.getElementById('user-email').value = '';
                        document.getElementById('user-name').value = '';
                        document.getElementById('user-role').value = 'user';
                        document.getElementById('user-password').value = '';
                        document.getElementById('userModalLabel').innerText = 'Add User';
                    });
                });

                const loadUsers = async () => {
                    try {
                        const response = await fetch('/users', {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        if (response.ok) {
                            const users = await response.json();
                            const tbody = document.getElementById('users-tbody');
                            tbody.innerHTML = '';
                            users.forEach(user => {
                                tbody.innerHTML += `
                    <tr>
                        <td>${user.id}</td>
                        <td>${user.email}</td>
                        <td>${user.name}</td>
                        <td>${user.role}</td>
                        <td>
                            <button class="btn btn-primary btn-sm" onclick="editUser(${user.id})">Edit</button>
                            <button class="btn btn-danger btn-sm" onclick="deleteUser(${user.id})">Delete</button>
                        </td>
                    </tr>
                `;
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Load Failed',
                                text: 'Failed to load users.'
                            });
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Load Failed',
                            text: 'An error occurred while loading users.'
                        });
                    }
                };

                const editUser = async (id) => {
                    try {
                        const response = await fetch(`/users/${id}`, {
                            method: 'GET',
                            headers: {
                                'Content-Type': 'application/json'
                            }
                        });

                        if (response.ok) {
                            const user = await response.json();
                            document.getElementById('user-id').value = user.id;
                            document.getElementById('user-email').value = user.email;
                            document.getElementById('user-name').value = user.name;
                            document.getElementById('user-role').value = user.role;
                            document.getElementById('user-password').value = '';
                            document.getElementById('userModalLabel').innerText = 'Edit User';
                            $('#userModal').modal('show');
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Load Failed',
                                text: 'Failed to load user information.'
                            });
                        }
                    } catch (error) {
                        Swal.fire({
                            icon: 'error',
                            title: 'Load Failed',
                            text: 'An error occurred while loading user information.'
                        });
                    }
                };

                const deleteUser = async (id) => {
                    Swal.fire({
                        title: 'Are you sure?',
                        text: "You won't be able to revert this!",
                        icon: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: 'Yes, delete it!'
                    }).then(async (result) => {
                        if (result.isConfirmed) {
                            try {
                                const response = await fetch(`/users/${id}`, {
                                    method: 'DELETE',
                                    headers: {
                                        'Content-Type': 'application/json'
                                    }
                                });

                                if (response.ok) {
                                    Swal.fire({
                                        icon: 'success',
                                        title: 'User Deleted',
                                        text: 'User has been deleted successfully.'
                                    }).then(() => {
                                        loadUsers();
                                    });
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Delete Failed',
                                        text: 'Failed to delete user.'
                                    });
                                }
                            } catch (error) {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Delete Failed',
                                    text: 'An error occurred while deleting the user.'
                                });
                            }
                        }
                    });
                };
            </script>
    </body>

</html>