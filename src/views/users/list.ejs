<%- include('../partials/header', { title: 'Manage Users' }) %>

    <body>
        <nav class="navbar navbar-expand-lg navbar-light bg-light">
            <a class="navbar-brand" href="/">Admin Panel</a>
            <div class="collapse navbar-collapse">
                <ul class="navbar-nav mr-auto">
                    <li class="nav-item"><a class="nav-link" href="/admin/users">Users</a></li>
                    <li class="nav-item"><a class="nav-link" href="/admin/profiles">Profiles</a></li>
                    <li class="nav-item"><a class="nav-link" href="/admin/blogs">Blogs</a></li>
                </ul>
            </div>
        </nav>

        <div class="container mt-4">
            <h1>Manage Users</h1>
            <button class="btn btn-primary mb-3" onclick="showNewEntityModal()">Add New User</button>
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <% fields.forEach(field=> { %>
                            <th>
                                <%= field %>
                            </th>
                            <% }) %>
                                <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    <% entities.forEach(entity=> { %>
                        <tr>
                            <% fields.forEach(field=> { %>
                                <td>
                                    <%= entity[field] %>
                                </td>
                                <% }) %>
                                    <td>
                                        <button class="btn btn-warning btn-sm"
                                            onclick="showEditEntityModal('<%= entity.id %>')">Edit</button>
                                        <button class="btn btn-danger btn-sm"
                                            onclick="deleteEntity('<%= entity.id %>')">Delete</button>
                                    </td>
                        </tr>
                        <% }) %>
                </tbody>
            </table>
        </div>

        <!-- Modal for Editing and Adding New -->
        <div class="modal fade" id="entityModal" tabindex="-1" role="dialog" aria-labelledby="entityModalLabel"
            aria-hidden="true">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="entityModalLabel"></h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="entity-form">
                            <div class="form-group">
                                <label for="email">Email</label>
                                <input type="email" class="form-control" id="email" name="email" required>
                            </div>
                            <div class="form-group">
                                <label for="name">Name</label>
                                <input type="text" class="form-control" id="name" name="name">
                            </div>
                            <div class="form-group">
                                <label for="role">Role</label>
                                <select class="form-control" id="role" name="role" required>
                                    <option value="user">User</option>
                                    <option value="admin">Admin</option>
                                </select>
                            </div>
                            <button type="submit" class="btn btn-primary">Save changes</button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <%- include('../partials/footer') %>
            <script>
                document.addEventListener("DOMContentLoaded", () => {
                    // Handle new entity
                    window.showNewEntityModal = function () {
                        const modal = $('#entityModal');
                        modal.find('.modal-title').text('Add New User');
                        modal.find('form').attr('action', '/admin/users');
                        modal.find('form').attr('method', 'POST');
                        modal.find('input, select').val('');
                        modal.modal('show');
                    };

                    // Handle edit entity
                    window.showEditEntityModal = function (id) {
                        fetch(`/admin/users/${id}`)
                            .then(response => response.json())
                            .then(data => {
                                const modal = $('#entityModal');
                                modal.find('.modal-title').text('Edit User');
                                modal.find('form').attr('action', `/admin/users/${id}`);
                                modal.find('form').attr('method', 'PUT');
                                for (const key in data) {
                                    modal.find(`[name="${key}"]`).val(data[key]);
                                }
                                modal.modal('show');
                            })
                            .catch(error => {
                                Swal.fire('Error!', 'Failed to fetch data for editing.', 'error');
                            });
                    };

                    // Handle delete entity
                    window.deleteEntity = function (id) {
                        Swal.fire({
                            title: 'Are you sure?',
                            text: "You won't be able to revert this!",
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Yes, delete it!'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                fetch(`/admin/users/${id}`, {
                                    method: 'DELETE'
                                }).then(response => {
                                    if (response.ok) {
                                        Swal.fire('Deleted!', 'User has been deleted.', 'success')
                                            .then(() => {
                                                location.reload();
                                            });
                                    } else {
                                        Swal.fire('Failed!', 'Failed to delete user.', 'error');
                                    }
                                });
                            }
                        });
                    };

                    // Handle form submission for editing and adding new
                    document.getElementById('entity-form').addEventListener('submit', function (event) {
                        event.preventDefault();
                        const form = this;
                        const formData = new URLSearchParams(new FormData(form));
                        const action = form.getAttribute('action');
                        const method = form.getAttribute('method');

                        fetch(action, {
                            method: method,
                            headers: {
                                'Content-Type': 'application/x-www-form-urlencoded'
                            },
                            body: formData
                        }).then(response => response.json()).then(data => {
                            if (data.error) {
                                Swal.fire('Error!', data.error, 'error');
                            } else {
                                Swal.fire('Success!', 'Operation completed successfully.', 'success')
                                    .then(() => {
                                        location.reload();
                                    });
                            }
                        }).catch(error => {
                            Swal.fire('Error!', 'An error occurred.', 'error');
                        });
                    });
                });
            </script>
    </body>

    </html>